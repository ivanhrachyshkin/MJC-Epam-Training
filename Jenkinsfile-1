pipeline{
    agent any
     environment {
                EC2_TOMCAT_IP = sh(script: "aws ec2 describe-instances --instance-ids ${env.EC2_TOMCAT_ID} --query 'Reservations[*].Instances[*].PublicIpAddress' --output text", returnStdout: true).trim()
            }

    stages{
       stage('GetCode'){
            steps{
                git 'https://github.com/ivanhrachyshkin/MJC-Epam-Training.git'
            }
         }
       stage('Test and SonarQube') {
             steps{
                withSonarQubeEnv('sonar-server') {
                    sh "./gradlew sonarqube"
                }
             }
         }
       stage('Test coverage verification') {
             steps{
                sh "./gradlew jacocoTestCoverageVerification"
             }
         }
       stage('Build war'){
             steps{
                sh "./gradlew war"
             }
         }
       stage('Deploy'){
             steps{
                deploy adapters: [tomcat9(url: "http://${env.EC2_TOMCAT_IP}:8080/", credentialsId: '384a2f7f-2066-4066-ada0-79037b9813f0')],
                                 war: '**/*.war',
                                 contextPath: 'app'
             }
         }
    }
}

